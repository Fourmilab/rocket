
                       Fourmilab Rocket

                       Development Log

2020 May 17

This is an overall log for the Rocket project, created at the time the
Git repository was created.  The structure of the project, and hence
this repository, is more complex than a typical item created for the
Second Life marketplace because many of the components developed herein
will be re-used in other projects under development.  The vehicles
(Rocket and UFO) have scripts built from a common code base in the
vehicle directory, while other components such as the target, SAM site
deployer, control recovery amulet, impact marker, and anvil bomb are
largely independent and have their own directories.

The repository consists of a subdirectories for each component
of the project, as follows:

    anvil
        Includes the generic anvil mesh model, the wearable
        anvil tosser, and the actual anvil projectile which
        it throws.  Subdirectories are:
            logs        Development logs
            meshes      DAE files for the anvil (regular
                        low resolution)
            meshes/blender  Blender models for the above
            scripts     LSL scripts for the anvil tosser
                        and projectile

    control_recovery
        Script for the Control Recovery Amulet, used to attempt
        recovery of controls after losing them in a botched
        region crossing.

    impact_marker
        The star marker which is placed upon impacts of the
        anvil projectile anywhere except on the target.
        Subdirectories are:
            logs        Development log
            scripts     LSL script
            textures    Texture for the five pointed star
                        with transparent background

    notecards
        User guides (help files) for the rocket and target.

    rocket
        Non-script files (sounds, textures, etc.) for the rocket
        vehicle.  The main development log for all vehicles is
        in logs/rocket.log.

    sam_deployer
        Files for the SAM site deployer.  Development is described
        in the main rocket/logs/rocket.log file.

    target
        The target and stand.  The stand is non-scripted and
        need not be used with the target (if, for example, you're
        placing it flat on the ground as a bombing target or
        on the wall of a building).  The target markers, which
        are placed at the point of impact, are included.
            logs        Development log
            scripts     LSL scripts for the target and markers
            textures    Texture for the target bullseye and rings
            textures/gimp  GIMP master files for the above

    ufo
        Non-script files (sounds, textures, etc.) for the UFO vehicle.

    marketplace
        Files for the marketplace listing of the composite
        product.

Because the various components interact with one another and
communicate by passing messages among their scripts, it isn't always
obvious which development log describes a given function.  It's best to
read all of the logs before digging into the individual scripts to add
features or modify their behaviour.

Created local development Git repository in:
    ~/w/SecondLife/Rocket/git
with:
    git init

Created a .gitignore file and added archival items we don't
want to include in the repository.  Added the .gitignore file
itself to the repository.

Added:
    Special files (README.md, etc.)
    logs (this file)
    notecards (User Guide / Help files)
    anvil
    control_recovery
    impact_marker
    marketplace
    rocket
    sam_deployer
    target
    ufo
    vehicle (rocket and ufo directories excluded, as generated by Makefile)

Made initial commit of files.

Logged on to github.com.

Created a new repository:
    rocket
with access URLs:
    HTTPS: https://github.com/Fourmilab/rocket.git
    SSH:   git@github.com:Fourmilab/rocket.git

Pushed the production directory to the repository with:
    git remote add origin git@github.com:Fourmilab/rocket.git
    git push -u origin master

Confirmed that my local "git sync" command works with the remote
repository.

Corrected the link to the main project image in README.md.
